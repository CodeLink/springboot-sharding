#分库分表配置文件
server:
  port: 8080

spring:
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      #数据源
      names: shardfk-2020,shardfk-2021 #数据源名称，命名随意，为了在FKDatabaseStandardShardingAlgorithm方便获取数据库名，这里定义和数据库名一致
      shardfk-2020:
        type: com.alibaba.druid.pool.DruidDataSource
        driver: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://IP:3306/shardfk-2020?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: XXXX
      shardfk-2021:
        type: com.alibaba.druid.pool.DruidDataSource
        driver: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://IP:3306/shardfk-2021?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: XXXX
    sharding:
      default-data-source-name: shardfk-2020 #
      default-database-strategy: #默认分库策略
        standard:
          #标准策略下分片算法包含2个precise + range，range是可选的，但是如果使用 range就必须同precise一起使用，如果不配置range，SQL中的BETWEEN AND将按照全库路由处理。
          sharding-column: create_time
          precise-algorithm-class-name: com.shard.algorithm.FKDatabaseStandardShardingAlgorithm
          range-algorithm-class-name: com.shard.algorithm.FKDatabaseStandardShardingAlgorithm
      tables:
        user: #逻辑表名
          actual-data-nodes: shardfk-$->{2020..2021}.user_$->{1..3} #配置表信息
          #表分片策略
          table-strategy:
            standard:
              #自定义时间表分片算法
              #标准策略下分片算法包含2个precise + range，range是可选的，但是如果使用 range就必须同precise一起使用。
              sharding-column: create_time #分片列名称
              precise-algorithm-class-name: com.shard.algorithm.FKDateStandardShardingAlgorithm
              range-algorithm-class-name: com.shard.algorithm.FKDateStandardShardingAlgorithm

mybatis-plus:
  mapper-locations: classpath:/mapper/* #MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名
  type-aliases-package: com.shard.entity # 数据库表与实体类的驼峰命名自动转换
  global-config: #全局配置
    db-config:
      id-type: ID_WORKER  #主键类型  0:数据库ID自增, 1:用户输入ID, 2:全局唯一ID (数字类型唯一ID), 3:全局唯一ID UUID;
  configuration:
    map-underscore-to-camel-case: true
    # 打印sql
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  level:
    com.shard: DEBUG